/* This file uses SQL to sort through various bike lane statistics */

/* 1. Creating a CTE to find which lanes have an average safety rating of at least 4.0, then labeling them as "Safe Lanes" */

WITH safety_average_cte AS(
    SELECT street,
    AVG(c.safetyrating) AS average_safetyrating
    FROM CityBikeLanes c
    GROUP BY c.street
    )

SELECT street,
average_safetyrating,
'Safe Lane' AS label
FROM safety_average_cte
WHERE average_safetyrating >= 4.0
;

/* 2. Creating a plan of action for the bike lanes based on their average safety ratings */

SELECT street, safetyrating,
AVG(safetyrating) OVER (PARTITION BY street) as "Average_safety_rating",
CASE WHEN AVG(safetyrating) OVER (PARTITION BY street) >= 4 THEN 'Leave As-Is'
    WHEN AVG(safetyrating) OVER (PARTITION BY street) <= 2.5 THEN 'Remove'
    ELSE 'Improvements Needed'
    END AS 'Recommendation'
FROM CityBikeLanes
